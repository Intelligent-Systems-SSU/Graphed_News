name: DeployApp

on:
  push:
    branches: [main]
  pull_request:

run-name: "Deploy Web App"

jobs:
  Deploy:
    concurrency:
      group: project-alpha-deploy
      cancel-in-progress: true
    runs-on: ubuntu-latest
    env:
      working-directory: ./web
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          package_json_file: ./web/package.json

      - name: Install dependencies
        working-directory: ${{ env.working-directory }}
        run: |
          pnpm install

      - name: Generate Prisma Client
        run: pnpm prisma generate
        working-directory: ./web

      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          packageManager: pnpm
          preCommands: pnpm build
          command: "pages deploy"
          workingDirectory: ${{ env.working-directory }}

      - name: Extract Preview URL
        id: extract_url
        run: |
          echo "DEPLOY_URL=$(grep -o 'https://[^ ]*\.pages\.dev' <<< "${{ steps.deploy.outputs.stdout }}")" >> $GITHUB_ENV

      - name: Update PR Description with Deploy Link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const body = pr.data.body || "";
            const url = process.env.DEPLOY_URL;
            if (url && !body.includes(url)) {
              const newBody = `${body}\n\n---\nðŸ”— [Cloudflare Pages Preview](${url})`;
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                body: newBody
              });
            }
